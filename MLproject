name: autoML

conda_env: conda.yml

entry_points:
  main: 
    parameters:
      target_column: { type: str, help:'prediction target column', default: "solubility"}
      mode: { type: str, help: 'HPO bayes preset', choices: ["medium_quality", "best_quality","manual"], default: "manual"}
      train_data: { type: str, help: 'path to train data csv', default :  "./data/soluprot/train.csv"}
      test_data: { type: str, help: 'path to test data csv', default : "./data/soluprot/test.csv"}
      test_n_fold: { type: int, help: 'choose nth fold as validation set',default :  0}
      searcher: { type: str, help: 'grid/bayes/random', default : ""}
      num_trials: { type: int, help: 'HPO trials number', default :  2}
      check_point_name: { type: str, help: 'huggingface_checkpoint', default : "facebook/esm2_t6_8M_UR50D"}
      max_epochs: { type: int,  help: 'max traning epoch', default : 2}
      metric: { type: str, help: 'evaluation metric', default : "precision"}

      lr: { type: str,  help: 'learning rate', default : "0.01"}
      lr_decay: { type: str,  help: 'learning rate decay', default :  "0.02"}
      weight_decay: { type: str,  help: 'weight decay', default :  "0.03"}
      batch_size: { type: str,  help: 'batch size', default :  "32"}
      optim_type: { type: str,  help: 'adam/adamw/sgd', default :  "adam"}
      lr_schedule: { type: str, help: 'cosine_decay/polynomial_decay/linear_decay', default : ""}
      tabular: { type: int, help: 'flag of tabualr ', default : 0}

    command: "python autoMM.py \
    --target_column {target_column} \
    --mode {mode} \
    --train_data {train_data} \
    --test_data {test_data} \
    --test_n_fold {test_n_fold} \
    --searcher {searcher} \
    --num_trials {num_trials} \
    --check_point_name {check_point_name} \
    --max_epochs {max_epochs} \
    --metric {metric} \
    --lr {lr} \
    --lr_decay {lr_decay} \
    --lr_schedule {lr_schedule} \
    --weight_decay {weight_decay} \
    --batch_size {batch_size} \
    --optim_type {optim_type} \
    --tabular {tabular} \
    "
    

