name: autoML

conda_env: automl.yml

entry_points:
  main: 
    parameters:
      target_column: { type: str, help:'prediction target column', default: "solubility"}
      mode: { type: str, help: 'HPO bayes preset', choices: ["medium_quality", "best_quality","manual"], default: "manual"}
      train_data: { type: str, help: 'path to train data csv', default :  "data/soluprot_train.csv"}
      valid_data: { type: str, help: 'path to test data csv', default :  "data/soluprot_test.csv"}
      searcher: { type: str, help: 'grid/bayes/random', default : ""}
      num_trials: { type: int, help: 'HPO trials number', default :  10}
      checkpoint_name: { type: str, help: 'huggingface_checkpoint_name', default : "model/esm2_8m"}
      max_epochs: { type: int,  help: 'max traning epoch', default : 2}
      metric: { type: str, help: 'evaluation metric', default : "precision"}

      lr: { type: str,  help: 'learning rate', default : "0.000001,0.01"}
      lr_decay: { type: str,  help: 'learning rate decay', default :  "0.00002,0.2"}
      weight_decay: { type: str,  help: 'weight decay', default :  "0.00003,0.3"}
      batch_size: { type: str,  help: 'batch size', default :  "32"}
      optim_type: { type: str,  help: 'adam/adamw/sgd', default :  "adam"}
      lr_schedule: { type: str, help: 'cosine_decay/polynomial_decay/linear_decay', default : "linear_decay"}

      tabular: { type: int, help: 'flag of tabualr ', default : 1}
      tabular_model: {type: str, help: 'tabular_model.', default: "RF" }

      n_estimators: {type: str, help='The number of trees in the forest.', default: "10,1000" }
      criterion: {type: str, help='"gini"/"entropy"/ "log_loss"', default: "gini" }
      max_depth: {type: str, help='The maximum depth of the tree.', default: "2,20" }
      min_samples_split: {type: str, help='The minimum number of samples required to split an internal node.', default: "2,10" }
      min_samples_leaf: {type: str, help='The minimum number of samples required to be at a leaf node.', default: "1,10" }

      subsample: {type: str, help='subample.', default: "0,1"}
      reg_lambda: {type: str, help='reg_lambda.', default: "0,0.0001"}

      power: {type: str, help='reg_lambda.', default: "1,2"}
      n_neighbors: {type: str, help='n_neighbors.', default: "5,10"}
      leaf_size: {type: str, help='leaf_size.', default: "10,50"}


    command: "python autotabular.py \
    --target_column {target_column} \
    --mode {mode} \
    --train_data {train_data} \
    --valid_data {valid_data} \
    --searcher {searcher} \
    --num_trials {num_trials} \
    --checkpoint_name {checkpoint_name} \
    --max_epochs {max_epochs} \
    --metric {metric} \
    --lr {lr} \
    --lr_decay {lr_decay} \
    --lr_schedule {lr_schedule} \
    --weight_decay {weight_decay} \
    --batch_size {batch_size} \
    --optim_type {optim_type} \
    --tabular {tabular} \
    --tabular_model {tabular_model} \
    --n_estimators {n_estimators} \
    --criterion {criterion} \
    --max_depth {max_depth} \
    --min_samples_split {min_samples_split} \
    --min_samples_leaf {min_samples_leaf} \
    --subsample {subsample} \
    --reg_lambda {reg_lambda} \
    --power {power} \
    --n_neighbors {n_neighbors} \
    --leaf_size {leaf_size} \
    "

